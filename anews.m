%% 清理环境
clc; clear; close all;

%% ==== 1. 系统参数定义 ====
m2 = 350;       % 车身质量
m1 = 45;        % 车轮质量
k2 = 20000;     % 悬架刚度
k1 = 180000;    % 轮胎刚度
f0 = 0.2;       % 路面滤波器截止频率
v = 20;         % 行驶速度
G0 = 64e-6;     % 路面谱参数
cs = 3000; % 被动阻尼 [N·s/m]

road_amp = 2 * pi * sqrt(G0 * v);  % 路面输入增益

%% ==== 2. 状态空间模型构建 ====

% 状态变量：x = [z2_dot; z1_dot; z2; z1; q]
A = [0        0       -k2/m2     k2/m2      0;
     0        0        k2/m1  -(k1 + k2)/m1   k1/m1;
     1        0        0          0         0;
     0        1        0          0         0;
     0        0        0          0     -2*pi*f0];

B = [-1/m2;
      1/m1;
      0;
      0;
      0];                    % 控制输入 u（半主动阻尼力）

F = [0;
     0;
     0;
     0;
     road_amp];              % 道路扰动输入 q

% 输出 y = [车身加速度; 悬架动行程; 轮胎动位移]
C = [-k2/m2     k2/m2     0      0     0;
      0          0        1     -1     0;
      0          0        0      1    -1];

D = [-1/m2;
      0;
      0];

% 状态变量：x = [z2_dot; z1_dot; z2; z1; q]
A1 = [-cs/m2   cs/m2      -k2/m2     k2/m2      0;
       cs/m1   -cs/m1     k2/m1  -(k1 + k2)/m1   k1/m1;
       1        0        0          0         0;
       0        1        0          0         0;
       0        0        0          0     -2*pi*f0];

B1 = [0;
      0;
      0;
      0;
      0];                    % 控制输入 u（半主动阻尼力）

F = [0;
     0;
     0;
     0;
     road_amp];              % 道路扰动输入 q

% 输出 y = [车身加速度; 悬架动行程; 轮胎动位移]
C1 = [-k2/m2     k2/m2    -cs/m2   cs/m2     0;
      0          0        1     -1     0;
      0          0        0      1    -1];

D1 = [0;
      0;
      0];

%% ==== 3. 性能指标加权系数 ====
rho1 = 1;        % 车身加速度加权（舒适性）
rho2 = 1e3;      % 轮胎动位移加权（接地性）
rho3 = 1e2;      % 悬架行程加权（悬架安全性）

% 输出加权矩阵
Qy = diag([rho1, rho3, rho2]);

% 状态加权矩阵 Q = C'QyC
Q = C' * Qy * C;

% 控制加权矩阵 R = D'QyD
R = D' * Qy * D;

% 交叉项 N = C'QyD
N = C' * Qy * D;

%% ==== 4. LQR 控制器设计 ====
[Kc, ~, ~] = lqr(A, B, Q, R, N);  % 最优反馈增益

%% ==== 5. 卡尔曼滤波器设计 ====
% 构建扩展系统：输入为 [u; w]，输出为 y
sys_kalman = ss(A, [B, F], C, [D, zeros(3,1)]);

% 设置过程噪声和测量噪声协方差
Qn = 1;                              % 过程噪声
Rn = diag([0.01, 0.01, 0.01]);       % 输出测量噪声

% 求解卡尔曼滤波器增益
[Kf_sys, ~, ~] = kalman(sys_kalman, Qn, Rn);
Kf = double(Kf_sys.a(1:5, 1:3));     % 取状态估计器增益

%% ==== 6. 显示结果 ====
disp('LQR 控制增益 Kc:');
disp(Kc);

disp('卡尔曼滤波器增益 Kf:');
disp(Kf);




